/******************************************************************************
 *
 * Copyright (c) 2018, Synopsys, Inc.
 *
 *
 *
 */
/*! \page page_device Device
\tableofcontents
\section sect_device_introduction Introduction

The device folder in the root of embARC contains the necessary software APIs and implementations for common device IP. The device layer consists of the following components:
- <b>Device HAL</b>: a device hardware abstraction layer including WNIC (Wireless Network Interface Controller), UART (Universal Asynchronous Receiver/Transmitter), SPI (Serial Peripheral Interface), IIC (Inter-Integrated Circuit), GPIO (General Purpose Input Output) and SDIO (Secure Digital Input and Output).
- <b>Implementation</b>: device driver implementations based on the above device HAL, including WNIC implementation of Microchip MRF24G WiFi device and DesignWare IP implementations of UART, IIC, SPI, GPIO and SDIO devices.

\htmlonly
<div class="imagebox">
    <div style="width: 700px">
        <img src="pic/embARC_device_hal.jpg" alt="embARC Device Hardware Abstraction Layer"/>
        <p>embARC Device Hardware Abstraction Layer</p>
    </div>
</div>
\endhtmlonly
\image latex pic/embARC_device_hal.jpg "embARC Device Hardware Abstraction Layer" width=12cm

\section sect_device_devicehal Device HAL

The Device HAL provides abstraction for the following devices:
- <b>GPIO</b>: GPIO device abstraction in dev_gpio.h
- <b>I2C</b>: I2C device abstraction in dev_iic.h
- <b>SPI</b>: SPI device abstraction in dev_spi.h
- <b>UART</b>: UART device abstraction in dev_uart.h
- <b>SDIO</b>: SDIO device abstraction in dev_sdio.h
- <b>WNIC</b>: WINC device abstraction in dev_wnic.h


These *.h files provide abstraction APIs and macros that require corresponding implementations. embARC provides the device implementations in <b>device/ip/designware</b>, <b>device/peripheral</b>, and <b>board/xxxx/drivers</b>.  \n
Different device features are abstracted in the device HAL, such as UART, IIC, and SPI. Object-oriented concepts are adopted to provide common device operation APIs and device access APIs. See the section for each device for detailed information of the device HAL.

\section sect_device_implemented_drivers_in_embARC Device Drivers in embARC Software Package

The files relevant to supported devices in the <b>embARC Software Package</b> are described in the table below:

|      Source Code Folder             |                    Comments                           |
| :---------------------------------: | :---------------------------------------------------: |
|  board/xxxx/drivers                 |    Peripheral driver implementations for devices on board xxxx|
|  device/ip/designware/xxxx          |    Device HAL implementation for DesignWare IP, e.g. GPIO, I2C, SPI |
|  device/ip/ip_hal/inc               |    Device HAL definitions       |
|  device/peripheral/xxx              |    Peripheral drivers implementation, e.g. pmod modules, WiFi, BLE |

See also \ref DEVICE_HAL "Device HAL API"

- \ref DEVICE_HAL_COMMON
- \ref DEVICE_HAL_IIC
- \ref DEVICE_HAL_SPI
- \ref DEVICE_HAL_GPIO
- \ref DEVICE_HAL_UART
- \ref DEVICE_HAL_WNIC

\note The DesignWare UART, IIC, and SPI drivers support both polling and interrupt modes. The SDIO driver currently only supports polling mode.

\section sect_device_use_dev  How use to on-chip device IP and peripherals
To use on-chip device ip and peripherals, two new variables are introduced in the build system: ONCHIP_IP_LIST and EXT_DEV_LIST.

In most cases, when a board/SoC/chip is determined, its on-chip IP is also determined, ONCHIP_IP_LIST is primarily defined in the board's makefile. Taking EMSK as an example, it has Designware SPI/IIC/GPIO/UART, so <b>ONCHIP_IP_LIST ?= designware/iic designware/spi designware/uart designware/gpio </b> is added.

Different applications may use difference peripherals. Therefore, EXT_DEV_LIST is always defined in application level. For example, if a WiFi-based applications uses the pmod WiFi module, then its application makefile, <b>EXT_DEV_LIST += wifi/mrf24g</b> is defined to use the pmod WiFi module.

\section sect_device_add_new_device_to_embARC Adding New Device to embARC
\subsection sect_device_add_ip Add on-chip IP
If the HAL of the new device is defined, follow the steps below:
- Create a subfolder under the device/ip folder.
- Implement the driver according to the device HAL definition and existing DesignWare IP implementations.
- Add corresponding makefile.

If the HAL of the new device is not defined, follow the steps below:
- Create a header file under <b>device/ip/ip_hal</b>.
- Add the HAL definition for the new device.
- Implement the driver according to the device HAL definition.
- Add corresponding makefile.

\subsection sect_device_add_peripheral Add on-board or external peripherals

- Add the driver in <b>device/peripheral</b> folder according to the class of peripheral. For example, a flash device xxx should be in the folder <b>device/peripheral/flash/xxx</b> folder.
- Add corresponding makefile.


*/
